@{ Layout = null; }

<!DOCTYPE html>
<head>
    <title>Test</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
</head>

<body>
    <h2>Test Map</h2>

    <form asp-action="Index" method="post">
        <p>
            <!-- text box which accepts search radius. precision is set to meters (0.001km) at the moment -->
            <label>Search Radius (km):</label>
            <input type="number" step="0.001" name="searchRadius" id="SearchRadius"/>
            <button type="button" id="btnSearchRadius">Search</button>
        </p>
    </form>

    <script>
        $("#btnSearchRadius").click(function(){ 
        
            var searchRadius = $('#SearchRadius').val();

            navigator.geolocation.getCurrentPosition(success, error, geo_options);
            function success(position) {
                jQuery.ajax({
                    type: 'POST',
                    url: '@Url.Action("SearchByRadius")',
                    data: { 'latitude': position.coords.latitude, 'longitude': position.coords.longitude, 'searchRadius': searchRadius },
                    success: function (data) {
                        window.location.href = data.redirectToUrl;;
                    },
                    failure: function (errMsg) {
                        alert(errMsg);
                    }
                });
            }

            function error(msg) {
                if (msg.message.indexOf('Only secure origins are allowed') == 0) {
                    alert('https');
                }
            }

            var geo_options = {
                enableHighAccuracy: true,
                maximumAge: 30000,
                timeout: 27000
            };
            return;
        
        });
    </script>

    <fieldset>
        <legend>Melbourne Home</legend>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

        <div id="googleMap" style="height:500px;width:100%;"></div>
        <script>
            function myMap() {
                // TODO: zoom logic
                var mapProperties = { zoom: 14, scrollwheel: true, draggable: true, mapTypeId: google.maps.MapTypeId.ROADMAP };
                var map = new google.maps.Map(document.getElementById('googleMap'), mapProperties);

                var infowindow = new google.maps.InfoWindow();

                var viewBagStuff = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag));

                // if no locations populated in ViewBag:
                //     1. place a marker for current location.
                //     2. update the controller for current location.
                // else
                //     1. populate markers for all locations.
                //     2. draw a circle according to search radius.
                if (viewBagStuff.Locations == null) {
                    // geo search functions group:
                    // 1. get current position according to the navigator in use
                    // 2. success and error callback functions
                    // 3. options to set accuracy, timeout, etc etc

                    // 1.1 get position
                    navigator.geolocation.getCurrentPosition(success, error, geo_options);

                    // 2.1 success callback
                    function success(position) {
                        // set map center according to current location
                        var mapCenter = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                        map.setCenter(mapCenter);

                        // place a marker for current location
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
                            map: map
                        });

                        // place an event handler to handle when user clicks the marker
                        google.maps.event.addListener(marker, 'click', (function (marker) {
                            return function () {
                                var currentLocationInfo =
                                    '<div>' +
                                    '<strong>' + 'Current Location' + '</strong>' +
                                    '<br>' +
                                    'Notes: ' + 'Current locatoin lat lon' +
                                    '<br>' +
                                    'Latitude: ' + position.coords.latitude +
                                    '<br>' +
                                    'Longitude: ' + position.coords.longitude +
                                    '</div>'
                                infowindow.setContent(currentLocationInfo);
                                infowindow.open(map, marker);
                            }
                        })(marker));
                    }

                    // 2.2 error callback
                    function error(msg) {
                        if (msg.message.indexOf('Only secure origins are allowed') == 0) {
                            alert('https');
                        }
                    }

                    // 3.1 options
                    var geo_options = {
                        enableHighAccuracy: true,
                        maximumAge: 30000,
                        timeout: 27000
                    };
                    return;
                } else {
                    var locationsRaw = viewBagStuff.Locations;
                    var searchRadiusRaw = viewBagStuff.SearchRadius;
                    var locations = [];

                    for (var i = 0; i < locationsRaw.length; i++) {
                        locations.push([locationsRaw[i].Title, locationsRaw[i].Description, locationsRaw[i].Position.Latitude, locationsRaw[i].Position.Longitude]);
                    }

                    // at the moment, always the first item in the collection
                    // it's the current location anyway.
                    var mapCenter = new google.maps.LatLng(locations[0][2], locations[0][3]);
                    map.setCenter(mapCenter);

                    var marker, i;
                    for (i = 0; i < locations.length; i++) {
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(locations[i][2], locations[i][3]),
                            map: map
                        });

                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {
                                var currentLocationInfo =
                                    '<div>' +
                                    '<strong>' + locations[i][0] + '</strong>' +
                                    '<br>' +
                                    'Notes: ' + locations[i][1] +
                                    '<br>' +
                                    'Latitude: ' + locations[i][2] +
                                    '<br>' +
                                    'Longitude: ' + locations[i][3] +
                                    '</div>'
                                infowindow.setContent(currentLocationInfo);
                                infowindow.open(map, marker);
                            }
                        })(marker, i));
                    }

                    var cityCircle = new google.maps.Circle({
                        strokeColor: '#FF0000',
                        strokeOpacity: 0.8,
                        strokeWeight: 2,
                        fillColor: '#FF0000',
                        fillOpacity: 0.35,
                        map: map,
                        center: mapCenter,
                        radius: searchRadiusRaw * 1000
                    });
                }
            }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDMGtyp-NB3OZ5z20vu3J90kkxGYXmdE2w&callback=myMap"></script>
    </fieldset>
</body>